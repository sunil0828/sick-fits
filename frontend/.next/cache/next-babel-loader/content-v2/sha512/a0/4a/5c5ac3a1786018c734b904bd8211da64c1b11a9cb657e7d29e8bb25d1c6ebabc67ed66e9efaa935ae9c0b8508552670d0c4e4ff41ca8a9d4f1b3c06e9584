{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { useRouter } from 'next/dist/client/router';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function Search() {\n  const router = useRouter();\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    isOpen,\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    highlightedIndex\n  } = useCombobox({\n    items,\n\n    onInputValueChange() {\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange({\n      selectedItem\n    }) {\n      router.push({\n        pathname: `/product/${selectedItem.id}`\n      });\n    },\n\n    itemToString: item => (item === null || item === void 0 ? void 0 : item.name) || ''\n  });\n  return /*#__PURE__*/_jsxs(SearchStyles, {\n    children: [/*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsx(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })))\n    })), /*#__PURE__*/_jsxs(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [isOpen && items.map((item, index) => /*#__PURE__*/_createElement(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item\n      })), {}, {\n        key: item.id,\n        highlighted: index === highlightedIndex\n      }), /*#__PURE__*/_jsx(\"img\", {\n        src: item.photo.image.publicUrlTransformed,\n        alt: item.name,\n        width: \"50\"\n      }), item.name)), isOpen && !items.length && !loading && /*#__PURE__*/_jsxs(DropDownItem, {\n        children: [\"Sorry, No items found for \", inputValue]\n      })]\n    }))]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}