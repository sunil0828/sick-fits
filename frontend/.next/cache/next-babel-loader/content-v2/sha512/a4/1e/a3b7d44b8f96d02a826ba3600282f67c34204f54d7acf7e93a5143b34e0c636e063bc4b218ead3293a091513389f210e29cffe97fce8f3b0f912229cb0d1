{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\finished-application\\\\frontend\\\\components\\\\Shirts.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-gap: 60px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SHIRTS_QUERY {\\n    allProducts {\\n      id\\n      name\\n      price\\n      category\\n      description\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nvar ALL_SHIRTS_QUERY = gql(_templateObject());\nvar ShirtsListStyles = styled.div(_templateObject2());\n_c = ShirtsListStyles;\nexport default function ShirtsPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_SHIRTS_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  console.log('data :', data, 'loading:', loading, 'error:', error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ShirtsListStyles, {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShirtsPage, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = ShirtsPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShirtsListStyles\");\n$RefreshReg$(_c2, \"ShirtsPage\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/finished-application/frontend/components/Shirts.js"],"names":["useQuery","gql","styled","ALL_SHIRTS_QUERY","ShirtsListStyles","div","ShirtsPage","page","loading","error","data","message","console","log","allProducts","map","product","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,gBAAgB,GAAGF,GAAH,mBAAtB;AAkBA,IAAMG,gBAAgB,GAAGF,MAAM,CAACG,GAAV,oBAAtB;KAAMD,gB;AAMN,eAAe,SAASE,UAAT,OAA8B;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACVP,QAAQ,CAACG,gBAAD,CADE;AAAA,MACnCK,OADmC,aACnCA,OADmC;AAAA,MAC1BC,KAD0B,aAC1BA,KAD0B;AAAA,MACnBC,IADmB,aACnBA,IADmB;;AAE3C,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB,EAA4B,UAA5B,EAAwCF,OAAxC,EAAiD,QAAjD,EAA2DC,KAA3D;AACA,sBACE;AAAA,2BACE,QAAC,gBAAD;AAAA,gBACGC,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,4BACpB,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA;AAAnC,WAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAduBX,U;UACWN,Q;;;MADXM,U","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\n\r\nconst ALL_SHIRTS_QUERY = gql`\r\n  query ALL_SHIRTS_QUERY {\r\n    allProducts {\r\n      id\r\n      name\r\n      price\r\n      category\r\n      description\r\n      photo {\r\n        id\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ShirtsListStyles = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n`;\r\n\r\nexport default function ShirtsPage({ page }) {\r\n  const { loading, error, data } = useQuery(ALL_SHIRTS_QUERY);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  console.log('data :', data, 'loading:', loading, 'error:', error);\r\n  return (\r\n    <div>\r\n      <ShirtsListStyles>\r\n        {data.allProducts.map((product) => (\r\n          <Product key={product.id} product={product} />\r\n        ))}\r\n      </ShirtsListStyles>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}