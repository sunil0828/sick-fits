{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\finished-application\\\\frontend\\\\lib\\\\cartState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\n  // Closed cart by default\n  var _useState = useState(false),\n      cartOpen = _useState[0],\n      setCartOpen = _useState[1];\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen,\n      setCartOpen: setCartOpen,\n      toggleCart: toggleCart,\n      closeCart: closeCart,\n      openCart: openCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\n_s(CartStateProvider, \"xe1WncxGrJWPKk54fyWehQszVXg=\");\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s2();\n\n  // We use a consumer here to access the local state\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s2(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/finished-application/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,IAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,IAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACvC;AAEA;AAHuC,kBAIPL,QAAQ,CAAC,KAAD,CAJD;AAAA,MAIhCM,QAJgC;AAAA,MAItBC,WAJsB;;AAMvC,WAASC,UAAT,GAAsB;AACpBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASG,SAAT,GAAqB;AACnBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,WAASG,QAAT,GAAoB;AAClBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,QAAQ,EAARA,QADK;AAELC,MAAAA,WAAW,EAAXA,WAFK;AAGLC,MAAAA,UAAU,EAAVA,UAHK;AAILC,MAAAA,SAAS,EAATA,SAJK;AAKLC,MAAAA,QAAQ,EAARA;AALK,KADT;AAAA,cASGL;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,C,CAED;;;GAjCSD,iB;;KAAAA,iB;;AAkCT,SAASO,OAAT,GAAmB;AAAA;;AACjB;AACA,MAAMC,GAAG,GAAGb,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACD;;IAJQD,O;;AAKT,SAASP,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // This is our own custom provider! We will store data (state) and functionality (updaters) in here and anyone can access it via the consumer!\n\n  // Closed cart by default\n  const [cartOpen, setCartOpen] = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return (\n    <LocalStateProvider\n      value={{\n        cartOpen,\n        setCartOpen,\n        toggleCart,\n        closeCart,\n        openCart,\n      }}\n    >\n      {children}\n    </LocalStateProvider>\n  );\n}\n\n// make a custom hook for accessing the cart local state\nfunction useCart() {\n  // We use a consumer here to access the local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}